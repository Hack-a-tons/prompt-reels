# Nginx configuration for api.reels.hurated.com (and reels.hurated.com)
# Place this in your nginx sites-available/reels.hurated.com

server {
    listen 80;
    listen [::]:80;
    server_name reels.hurated.com api.reels.hurated.com;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name reels.hurated.com api.reels.hurated.com;

    # SSL certificates (adjust paths as needed)
    # Certbot should handle both domains if configured correctly
    ssl_certificate /etc/letsencrypt/live/reels.hurated.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/reels.hurated.com/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Logging
    access_log /var/log/nginx/reels.hurated.com-access.log;
    error_log /var/log/nginx/reels.hurated.com-error.log;

    # Client max body size (for video uploads) - 200MB to handle larger videos
    client_max_body_size 200M;

    # Proxy to Node.js backend on port 15000
    location / {
        proxy_pass http://localhost:15000;
        proxy_http_version 1.1;
        
        # WebSocket support (if needed later)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts (increased for large video uploads)
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Disable buffering for real-time responses
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
    }
}

# Future: If you add a separate frontend, you could use subdomains:
#
# Option 1: Serve frontend from main domain, API from subdomain
# server {
#     server_name api.reels.hurated.com;
#     # ... proxy to port 15000 (API)
# }
# server {
#     server_name reels.hurated.com;
#     # ... serve frontend static files or proxy to frontend server
# }
#
# Option 2: Keep everything on main domain with different paths
# location /api/ {
#     proxy_pass http://localhost:15000/api/;
# }
# location / {
#     # Serve frontend
#     root /var/www/reels-frontend;
#     try_files $uri $uri/ /index.html;
# }
